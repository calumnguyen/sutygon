[{"E:\\fiver_projects\\sutygon\\src\\index.js":"1","E:\\fiver_projects\\sutygon\\src\\reportWebVitals.js":"2","E:\\fiver_projects\\sutygon\\src\\App.js":"3","E:\\fiver_projects\\sutygon\\src\\store.js":"4","E:\\fiver_projects\\sutygon\\src\\components\\login\\Login.js":"5","E:\\fiver_projects\\sutygon\\src\\components\\home\\Home.js":"6","E:\\fiver_projects\\sutygon\\src\\components\\myorder\\MyOrder.js":"7","E:\\fiver_projects\\sutygon\\src\\components\\team\\Team.js":"8","E:\\fiver_projects\\sutygon\\src\\components\\point\\Point.js":"9","E:\\fiver_projects\\sutygon\\src\\components\\store\\Store.js":"10","E:\\fiver_projects\\sutygon\\src\\components\\registeration\\Register.js":"11","E:\\fiver_projects\\sutygon\\src\\components\\footer\\FooterComponent.js":"12","E:\\fiver_projects\\sutygon\\src\\components\\header\\HeaderComponentHome.js":"13","E:\\fiver_projects\\sutygon\\src\\components\\header\\HeaderComponentBlack.js":"14","E:\\fiver_projects\\sutygon\\src\\components\\header\\HeaderComponentLogin.js":"15","E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\PageLoader.js":"16","E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\WalkthroughOverlayContainer.js":"17","E:\\fiver_projects\\sutygon\\src\\actions\\customer.js":"18","E:\\fiver_projects\\sutygon\\src\\reducers\\index.js":"19","E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\NavbarSidebar.js":"20","E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\NavbarTopmenu.js":"21","E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\NavbarMainmenuBlack.js":"22","E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\NavbarMainmenu.js":"23","E:\\fiver_projects\\sutygon\\src\\actions\\type.js":"24","E:\\fiver_projects\\sutygon\\src\\reducers\\customer.js":"25","E:\\fiver_projects\\sutygon\\src\\components\\registeration\\VerifyCode.js":"26","E:\\fiver_projects\\sutygon\\src\\components\\registeration\\test.js":"27"},{"size":517,"mtime":1613289605013,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1613289605013,"results":"30","hashOfConfig":"29"},{"size":1729,"mtime":1614022397291,"results":"31","hashOfConfig":"29"},{"size":399,"mtime":1613289828602,"results":"32","hashOfConfig":"29"},{"size":4713,"mtime":1614029364671,"results":"33","hashOfConfig":"29"},{"size":21161,"mtime":1614029894816,"results":"34","hashOfConfig":"29"},{"size":5987,"mtime":1613289605009,"results":"35","hashOfConfig":"29"},{"size":8949,"mtime":1613289605011,"results":"36","hashOfConfig":"29"},{"size":5207,"mtime":1613289605010,"results":"37","hashOfConfig":"29"},{"size":4367,"mtime":1613289605010,"results":"38","hashOfConfig":"29"},{"size":30810,"mtime":1614109753729,"results":"39","hashOfConfig":"29"},{"size":929,"mtime":1613382868826,"results":"40","hashOfConfig":"29"},{"size":1689,"mtime":1614029187233,"results":"41","hashOfConfig":"29"},{"size":1175,"mtime":1613289605004,"results":"42","hashOfConfig":"29"},{"size":1733,"mtime":1613289605005,"results":"43","hashOfConfig":"29"},{"size":262,"mtime":1613289605007,"results":"44","hashOfConfig":"29"},{"size":2620,"mtime":1614077193518,"results":"45","hashOfConfig":"29"},{"size":4232,"mtime":1613768117145,"results":"46","hashOfConfig":"29"},{"size":128,"mtime":1613289797976,"results":"47","hashOfConfig":"29"},{"size":1510,"mtime":1613384139942,"results":"48","hashOfConfig":"29"},{"size":507,"mtime":1613289605007,"results":"49","hashOfConfig":"29"},{"size":1832,"mtime":1613289605007,"results":"50","hashOfConfig":"29"},{"size":1791,"mtime":1613289605006,"results":"51","hashOfConfig":"29"},{"size":576,"mtime":1613737447548,"results":"52","hashOfConfig":"29"},{"size":2361,"mtime":1613753827572,"results":"53","hashOfConfig":"29"},{"size":5947,"mtime":1614082053481,"results":"54","hashOfConfig":"29"},{"size":8111,"mtime":1614025405019,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1fzr6o9",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},"E:\\fiver_projects\\sutygon\\src\\index.js",[],["119","120"],"E:\\fiver_projects\\sutygon\\src\\reportWebVitals.js",[],"E:\\fiver_projects\\sutygon\\src\\App.js",[],"E:\\fiver_projects\\sutygon\\src\\store.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\login\\Login.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\home\\Home.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\myorder\\MyOrder.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\team\\Team.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\point\\Point.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\store\\Store.js",["121"],"import React from 'react'\r\nimport {Helmet} from \"react-helmet\";\r\nimport HeaderComponentBlack from \"../header/HeaderComponentBlack\";\r\nimport FooterComponent from \"../footer/FooterComponent\";\r\nimport WalkthroughOverlayContainer from \"../miscellaneous/WalkthroughOverlayContainer\";\r\nimport PageLoader from \"../miscellaneous/PageLoader\";\r\n\r\n\r\nfunction Store() {\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n\r\n      <Helmet>\r\n        <title>Cửa hàng</title>\r\n      </Helmet>\r\n\r\n\r\n      <PageLoader/>\r\n\r\n\r\n      <HeaderComponentBlack/>\r\n\r\n\r\n\r\n\r\n\r\n      <main className=\"page-main page-fullpage main-anim\" id=\"itempage\">\r\n        <div className=\"section section-twoside fp-auto-height-responsive section-item\" data-section=\"item-alpha\">\r\n          <div className=\"section-cover-tier mask-black\" style={{backgroundImage: \"url('assets/img/55.jpg')\"}}>\r\n            <div className=\"cover-content\">\r\n              <div className=\"title-desc\">\r\n                <h2 className=\"display-4 display-title home-title bordered anim-1\">Sutygon</h2>\r\n                <h4 className=\"anim-2\" style={{textAlign:'left'}}>Xem thông tin cửa hàng trong thời gian thực</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"section-wrapper largewidth\">\r\n            <div className=\"item row\">\r\n              <div className=\"col-12 col-md-4\">\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-8\">\r\n                <div className=\"section-content anim scrollable\">\r\n\r\n                  <article className=\"article article-light\">\r\n                    <div className=\"article-content\">\r\n                      <div className=\"wrapper\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12 col-md-12\">\r\n                            <h2 className=\"text-center\"><span className=\"badge badge-pill badge-danger\">Chúng tôi đang mở cửa</span>\r\n                            </h2>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\" style={{textAlign: 'left'}}>\r\n                          <div className=\"col-5 col-md-5\" id=\"rowSizingDown\">\r\n                            <div>\r\n                              <h2 className=\"strong\"><span className=\"text-danger\">Chi Nhánh 1 </span></h2>\r\n                              <h4 className=\"text-only\" id=\"headingSize\" style={{color: 'white'}}>70A Nguyễn Chí Thanh, Đà Nẵng , Việt nam 0905\r\n                                923 149 </h4>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-2 col-md-2\" id=\"rowSizingDown\">\r\n                            <div className=\"vl\"></div>\r\n                          </div>\r\n\r\n                          <div className=\"col-5 col-md-5\" id=\"rowSizingDown\">\r\n                            <div>\r\n                              <h2 className=\"strong\"><span className=\"text-danger\">Chi Nhánh 2 </span></h2>\r\n                              <h4 className=\"text-only\" id=\"headingSize\" style={{color: 'white'}}>76B Nguyễn Chí Thanh, Đà Nẵng , Việt nam 0905\r\n                                923 149</h4>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                        <br/>\r\n                        <br/>\r\n\r\n                        <div className=\"row\">\r\n\r\n                          <div className=\"col-6 col-md-6\" id=\"rowSizingDown1\">\r\n                            <h2 className=\"strong\"><span className=\"badge badge-pill badge-danger\">Mở Cửa</span></h2>\r\n                          </div>\r\n\r\n                          <div className=\"col-6 col-md-6\" id=\"rowSizingDown1\">\r\n                            <h2 className=\"strong\" id=\"h2cnter\"><span\r\n                              className=\"badge badge-pill badge-danger\">Mở Cửa</span>\r\n                            </h2>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <FooterComponent/>\r\n\r\n\r\n                  </article>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </main>\r\n\r\n\r\n      {/*problem*/}\r\n      {/*<WalkthroughOverlayContainer/>*/}\r\n\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default Store\r\n\r\n\r\n","E:\\fiver_projects\\sutygon\\src\\components\\registeration\\Register.js",["122","123","124","125","126","127","128","129","130","131","132","133"],"import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport HeaderComponentLogin from \"../header/HeaderComponentLogin\";\r\nimport PageLoader from \"../miscellaneous/PageLoader\";\r\nimport {\r\n  addNewCustomer,\r\n  sendCodeRequest,\r\n  getAllCustomers,\r\n  getCustomer,\r\n  updateCustomer,\r\n} from \"../../actions/customer\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport * as moment from \"moment\";\r\nimport { OCAlert } from \"@opuscapita/react-alerts\";\r\nimport { OCAlertsProvider } from \"@opuscapita/react-alerts\";\r\nimport VerifyCode from \"./VerifyCode\";\r\nimport ReactFlagsSelect from \"react-flags-select\";\r\nimport \"react-country-dropdown/dist/index.css\";\r\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\nimport { vi } from \"date-fns/esm/locale\";\r\nimport scrollToComponent from 'react-scroll-to-component';\r\n\r\nregisterLocale(\"vi\", vi);\r\nsetDefaultLocale(\"vi\");\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    fullname: \"\",\r\n    address: \"\",\r\n    birthday: \"\",\r\n    email: \"\",\r\n    company_name: \"\",\r\n    company_address: \"\",\r\n    phonenumber: '',\r\n    password: \"\",\r\n    code: \"VN\",\r\n    customerEmailArray: \"\",\r\n    isUpdate: false,\r\n    saving: false,\r\n    sendingCode: false,\r\ncontact:'' \r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.getAllCustomers();\r\n    await new Promise((resolve) => setTimeout(resolve, 3000)); // 3 sec\r\n\r\n    //get all customers email array.\r\n    this.getEmailArray();\r\n  }\r\n\r\n  toNumber = (e) => {\r\n    const {code,phonenumber} = this.state;\r\n    var num = phonenumber.slice(1);\r\n    var res = phonenumber.slice(0, 1);\r\n    if (phonenumber ) {\r\n      if(code === \"VN\" && res == \"0\"){\r\n        this.setState({ phonenumber: \"0\" + num, contact: \"+84\" + num });\r\n      }\r\n      else if(code === \"VN\" && res != \"0\"){\r\n        this.setState({ phonenumber: \"\", contact:\"\" });\r\n        OCAlert.alertError(\"Phone number must start from 0\",{  timeOut: 3000});\r\n      }\r\n      else if(code === \"US\"){\r\n        this.setState({ phonenumber: phonenumber, contact: \"+1\" + phonenumber });\r\n      }\r\n    }\r\n  };\r\n  handleValidation = (e) =>{\r\n    var number = e.target.value;\r\n   this.setState({phonenumber:number});\r\n  }\r\n  getEmailArray() {\r\n    let emails = [];\r\n    const { customer } = this.props;\r\n    if (customer) {\r\n      //filter email from all customers.\r\n      customer &&\r\n        customer.filter((customer) => {\r\n          emails.push(customer.email);\r\n        });\r\n    }\r\n    this.setState({\r\n      customerEmailArray: emails,\r\n    });\r\n  }\r\n\r\n  //send verification code to given phone number\r\n  sendCodeRequest = async (e, number) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ sendingCode: true });\r\n    const phonenumber = number;\r\n    //if phonenumber is empty, show error\r\n    if (phonenumber == \"\") {\r\n      OCAlert.alertError(\"Please enter phone number\", { timeOut: 3000 });\r\n    }\r\n    //api request for sending code\r\n    await this.props.sendCodeRequest(phonenumber);\r\n\r\n    const { isReqSent } = this.props;\r\n    if (isReqSent == \"pending\") {\r\n      OCAlert.alertSuccess(\"Code sent to given phone number\", {\r\n        timeOut: 3000,\r\n      });\r\n    } else if (isReqSent == \"Not Sent\") {\r\n      OCAlert.alertError(\"Phone Number is invalid, Try again\", {\r\n        timeOut: 3000,\r\n      });\r\n    }\r\n    await this.props.getCustomer(phonenumber);\r\n    const { isCustomerExist } = this.props;\r\n    this.setState({ sendingCode: false, isCustomerExist: isCustomerExist });\r\n    if (isCustomerExist == true) {\r\n      this.getExistingCustomerDetails();\r\n    }\r\n  };\r\n\r\n  UpdateCustomer = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ saving: true });\r\n    const state = { ...this.state };\r\n    //modifying online account details\r\n    let m_oc = {\r\n      exist: \"yes\",\r\n      membership: this.state.membership === \"\" ? null : this.state.membership,\r\n      username: this.state.fullname,\r\n      email: \"unverified\",\r\n      deactivate: false,\r\n    };\r\n    var customerData = {\r\n      name: state.fullname,\r\n      email: state.email,\r\n      contactnumber: state.phonenumber,\r\n      address: state.address,\r\n      birthday: moment(state.birthday),\r\n      company: state.company_name,\r\n      company_address: state.company_address,\r\n      online_account: m_oc,\r\n      password: state.password,\r\n      block_account: state.block_account === \"\" ? false : state.block_account,\r\n    };\r\n\r\n    //api action call for updating customer\r\n    await this.props.updateCustomer(customerData, state.id);\r\n\r\n    if (this.props.saved == true) {\r\n      OCAlert.alertSuccess(\"Account details updated successfully\", {\r\n        timeOut: 3000,\r\n      });\r\n      this.setState({\r\n        fullname: \"\",\r\n        address: \"\",\r\n        birthday: \"\",\r\n        email: \"\",\r\n        company_name: \"\",\r\n        company_address: \"\",\r\n        phonenumber: \"\",\r\n        password: \"\",\r\n        code: \"\",\r\n        customerEmailArray: \"\",\r\n        isUpdate: false,\r\n        saving: false,\r\n        sendingCode: false,\r\n      });\r\n    }\r\n  };\r\n  getExistingCustomerDetails = () => {\r\n    const { customer } = this.props;\r\n    if (customer) {\r\n      this.setState({\r\n        id: customer._id,\r\n        fullname: customer.name,\r\n        address: customer.address,\r\n        birthday:\r\n          customer.birthday && moment(customer.birthday).format(\"DD/MM/YYYY\"),\r\n        email: customer.email,\r\n        company_name: customer.company,\r\n        company_address: customer.company_address,\r\n        phonenumber: customer.phonenumber,\r\n        isUpdate: true,\r\n      });\r\n    }\r\n  };\r\n  //validate customer email. show error if same email already exist or format of email is not valid\r\n  validateCustomerEmail = (e) => {\r\n    const { customerEmailArray } = this.state;\r\n    if (e.target.value.length > 0) {\r\n      let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n      var isInclude = customerEmailArray.includes(e.target.value);\r\n      if (re.test(e.target.value) && !isInclude) {\r\n        this.setState({ email: e.target.value });\r\n      } else if (re.test(e.target.value) && isInclude) {\r\n        OCAlert.alertError(\"Email Already exists\", { timeOut: 3000 });\r\n        this.setState({ email: \"\" });\r\n        return;\r\n      } else {\r\n        OCAlert.alertError(\"Email is not valid\", { timeOut: 3000 });\r\n        this.setState({ email: \"\" });\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  //show error on signup button if phone number is not verified\r\n  showVerificationError = (e) => {\r\n    e.preventDefault();\r\n    OCAlert.alertError(\"Please Verify phone number to proceed!!\");\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //handle change for datepicker's event\r\n  handleChangeForDate = (date) => {\r\n    this.setState({\r\n      birthday: date,\r\n    });\r\n  };\r\n\r\n  //add customer\r\n  SaveCustomer = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ saving: true });\r\n    const state = { ...this.state };\r\n    //modifying online account details\r\n    let m_oc = {\r\n      exist: \"yes\",\r\n      membership: this.state.membership === \"\" ? null : this.state.membership,\r\n      username: this.state.fullname,\r\n      email: \"unverified\",\r\n      deactivate: false,\r\n    };\r\n    var customerData = {\r\n      name: state.fullname,\r\n      email: state.email,\r\n      contactnumber: state.phonenumber,\r\n      address: state.address,\r\n      birthday: moment(state.birthday),\r\n      company: state.company_name,\r\n      company_address: state.company_address,\r\n      online_account: m_oc,\r\n      password: state.password,\r\n      block_account: state.block_account === \"\" ? false : state.block_account,\r\n    };\r\n\r\n    //api action call for adding new customer\r\n    await this.props.addNewCustomer(customerData);\r\n\r\n    if (this.props.saved == true) {\r\n      OCAlert.alertSuccess(\"Account details saved successfully\", {\r\n        timeOut: 3000,\r\n      });\r\n      this.setState({\r\n        fullname: \"\",\r\n        address: \"\",\r\n        birthday: \"\",\r\n        email: \"\",\r\n        company_name: \"\",\r\n        company_address: \"\",\r\n        phonenumber: \"\",\r\n        password: \"\",\r\n        code: \"\",\r\n        customerEmailArray: \"\",\r\n        isUpdate: false,\r\n        saving: false,\r\n        sendingCode: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      fullname,\r\n      birthday,\r\n      address,\r\n      company_name,\r\n      email,\r\n      contact,\r\n      company_address,\r\n      phonenumber,\r\n    } = this.state;\r\n    \r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Register</title>\r\n        </Helmet>\r\n        <PageLoader />\r\n        <HeaderComponentLogin />\r\n        {/*<!-- BEGIN OF page cover -->*/}\r\n        <div className=\"page-cover\">\r\n          {/*<!-- Cover Background -->*/}\r\n          <div\r\n            className=\"cover-bg bg-img\"\r\n            data-image-src=\"assets/img/bg-default1.jpg\"\r\n          ></div>\r\n          {/*<!-- Transluscent mask as filter -->*/}\r\n          <div\r\n            className=\"cover-bg-mask bg-color\"\r\n            data-bgcolor=\"rgba(2, 3, 10, 0.7)\"\r\n          ></div>\r\n        </div>\r\n        <div id=\"myApp\">\r\n          <OCAlertsProvider />\r\n        </div>\r\n        {/*<!--END OF page cover -->*/}\r\n        {/*<!-- BEGIN OF page main content -->*/}\r\n        <main className=\"page-main page-fullpage main-anim\" id=\"mainpage\">\r\n          {/*<!-- Begin of register/login/signin section -->*/}\r\n          <div\r\n            className=\"section section-register fp-auto-height-responsive \"\r\n            data-section=\"register\"\r\n          >\r\n            {/*<!-- Begin of section wrapper -->*/}\r\n            <div className=\"section-wrapper\">\r\n              {/*<!-- title -->*/}\r\n              <div className=\"section-title text-center\">\r\n                <h5 className=\"title-bg\">Regiter</h5>\r\n              </div>\r\n\r\n              {/*<!-- content -->*/}\r\n              <div className=\"section-content anim text-center\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col-12 col-md-8 col-lg-6\">\r\n                    {/*<!-- Registration form container-->*/}\r\n                    <form\r\n                      className=\"send_email_form form-container form-container-transparent form-container-white\"\r\n                      onSubmit={(e) =>\r\n                        this.sendCodeRequest(e, this.state.contact)\r\n                      }\r\n                    >\r\n                      <div className=\"form-desc  text-white\">\r\n                        <h2 className=\"display-4 display-title anim-2\">\r\n                          Register\r\n                        </h2>\r\n                        <p className=\"invite  anim-3\">\r\n                          Register now, receive gifts immediately\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"form-input  anim-4\">\r\n                        <div className=\"form-group form-success-gone\">\r\n                          <label htmlFor=\"login-number\">\r\n                            Enter 10-digit phone number\r\n                          </label>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-3 flag-dropdown\">\r\n                              <ReactFlagsSelect\r\n                                selected={this.state.code}\r\n                                showSelectedLabel={false}\r\n                                showSecondarySelectedLabel={false}\r\n                                countries={[\"VN\", \"US\"]}\r\n                                placeholder=\"\"\r\n                                fullWidth={false}\r\n                                customLabels= {\r\n                                  {VN: { primary: \"VIE\", secondary: \"+84\" },\r\n                                  US: { primary: \"US\", secondary: \"+1\" },}\r\n                                }\r\n                                onSelect={(code) =>\r\n                                  this.setState({ code: code })\r\n                                }\r\n                              />\r\n                            </div>\r\n                         \r\n                            <div className=\"col-md-9\">\r\n                              <input\r\n                                name={\"phonenumber\"}\r\n                                value={this.state.phonenumber}\r\n                                onChange={(e) => this.handleValidation(e)}\r\n                                className=\"form-control-line form-control-white text-white\"\r\n                                onBlur={(e) => this.toNumber(e)}\r\n                                maxlength={11}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {/* <PhoneInput\r\n      placeholder=\"Enter phone number\"\r\n      international={false}\r\n      value={this.state.phonenumber}\r\n      countryCallingCodeEditable={false}\r\n      defaultCountry=\"VN\"\r\n      onChange={phonenumber=>(this.toNumber(phonenumber))}\r\n      /> */}\r\n                        </div>\r\n\r\n                        <div className=\"form-group form-success-gone\">\r\n                          <label htmlFor=\"login-pasword\">\r\n                            Enter a Secured Password\r\n                          </label>\r\n                          <input\r\n                            id=\"login-pas\"\r\n                            onChange={(e) => this.handleChange(e)}\r\n                            name=\"password\"\r\n                            className=\"form-control-line form-control-white text-white\"\r\n                            type=\"password\"\r\n                          />\r\n                        </div>\r\n                        {this.state.sendingCode ? (\r\n                          <button\r\n                            className=\"btn btn-white btn-round btn-full form-success-gone\"\r\n                            type=\"submit\"\r\n\r\n                          >\r\n                            Sending...\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"btn btn-white btn-round btn-full form-success-gone\"\r\n                            type=\"submit\"\r\n                            onClick={() => scrollToComponent(this.Blue, { offset: -200, align: 'middle', duration: 1500, ease:'inCirc'})}\r\n                          >\r\n                            Send Verification Code\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/*<!-- End of section wrapper -->*/}\r\n          </div>\r\n          {/*<!-- End of register/login/signin section -->*/}\r\n\r\n          {/*<!-- Begin of verification section -->*/}\r\n\r\n           <div\r\n            className=\"section section-register fp-auto-height-responsive \"\r\n            data-section=\"verification\" ref={(section) => { this.Blue = section; }} \r\n          >\r\n\r\n            <VerifyCode phonenumber={contact} />\r\n\r\n          </div>\r\n           {/*<!-- End of verification section -->*/}\r\n          {/*<!-- Begin of personal info/name section -->*/}\r\n          <div\r\n            className=\"section section-register fp-auto-height-responsive \"\r\n            data-section=\"personal-info-name\" \r\n          >\r\n            {/*<!-- Begin of section wrapper -->*/}\r\n            <div className=\"section-wrapper\">\r\n              {/*<!-- title -->*/}\r\n              <div className=\"section-title text-center\">\r\n                <h5 className=\"title-bg\">Personal</h5>\r\n              </div>\r\n\r\n              {/*<!-- content -->*/}\r\n\r\n              <div className=\"section-content anim text-center\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col-12 col-md-8 col-lg-6\">\r\n                    {/*<!-- Registration form container-->*/}\r\n                    <form className=\"send_email_form form-container form-container-transparent form-container-white\">\r\n                      <div className=\"form-desc text-white\">\r\n                        <h2 className=\"display-6 display-title anim-2\">\r\n                          Personal Information\r\n                        </h2>\r\n                        <p className=\"invite text-center anim-3\">\r\n                          Provide your personal information to complete the\r\n                          account registration process.\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"form-input  anim-4\">\r\n                        <div className=\"form-group form-success-gone\">\r\n                          <label htmlFor=\"fullname\">\r\n                            What is your full name?\r\n                          </label>\r\n                          <input\r\n                            id=\"fullname\"\r\n                            name=\"fullname\"\r\n                            className=\"form-control-line form-control-white text-white\"\r\n                            type=\"text\"\r\n                            value={fullname}\r\n                            onChange={(e) => this.handleChange(e)}\r\n                          />\r\n                        </div>\r\n\r\n                        <button\r\n                          to=\"/register#personal-info-address\"\r\n                          className=\"btn btn-white btn-round btn-full form-success-gone text-center px-1\"\r\n                        >\r\n                          Scroll down to add more information\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/*<!-- End of section wrapper -->*/}\r\n          </div>\r\n          {/*<!-- End of personal info/name section -->*/}\r\n          {/*<!-- Begin of personal info/dob section -->*/}\r\n          <div\r\n            className=\"section section-register fp-auto-height-responsive \"\r\n            data-section=\"personal-info-dob\"\r\n          >\r\n            {/*<!-- Begin of section wrapper -->*/}\r\n            <div className=\"section-wrapper\">\r\n              {/*<!-- title -->*/}\r\n              <div className=\"section-title text-center\">\r\n                <h5 className=\"title-bg\">Personal</h5>\r\n              </div>\r\n\r\n              {/*<!-- content -->*/}\r\n              <div className=\"section-content anim text-center\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col-12 col-md-8 col-lg-6\">\r\n                    {/*<!-- Registration form container-->*/}\r\n                    <form className=\"send_email_form form-container form-container-transparent form-container-white\">\r\n                      <div className=\"form-desc text-white\">\r\n                        <h2 className=\"display-6 display-title anim-2\">\r\n                          Personal Information\r\n                        </h2>\r\n                        <p className=\"invite text-center anim-3\">\r\n                          Provide your personal information to complete the\r\n                          account registration process.\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"form-input  anim-4\">\r\n                        <div className=\"form-input anim\">\r\n                          <div className=\"form-group form-success-gone anim-3\">\r\n                            <label htmlFor=\"login-number\">\r\n                              {fullname ? fullname : \"\"} ? Beautiful name! <b />\r\n                              What is your Date of Birth?\r\n                            </label>\r\n                            {this.state.isUpdate ? (\r\n                              <input\r\n                                value={this.state.birthday}\r\n                                className=\"form-control border-primary\"\r\n                                readOnly\r\n                              />\r\n                            ) : (\r\n                              <DatePicker\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                locale=\"vi\"\r\n                                selected={birthday}\r\n                                className=\"form-control\"\r\n                                onChange={(e) =>\r\n                                  this.handleChangeForDate(e, \"birthday\")\r\n                                }\r\n                                popperPlacement=\"top-start\"\r\n                                showMonthDropdown\r\n                                showYearDropdown\r\n                                dropdownMode=\"select\"\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <button\r\n                          to=\"/register#personal-info-address\"\r\n                          className=\"btn btn-white btn-round btn-full form-success-gone text-center px-1\"\r\n                        >\r\n                          Scroll down to add more information\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/*<!-- End of section wrapper -->*/}\r\n          </div>\r\n          {/*<!-- End of personal info/name section -->*/}\r\n          {/*<!-- Begin of personal info/address section -->*/}\r\n\r\n          <div\r\n            className=\"section section-register fp-auto-height-responsive \"\r\n            data-section=\"personal-info-address\"\r\n          >\r\n            {/*<!-- Begin of section wrapper -->*/}\r\n            <div className=\"section-wrapper\">\r\n              {/*<!-- title -->*/}\r\n              <div className=\"section-title text-center\">\r\n                <h5 className=\"title-bg\">Personal</h5>\r\n              </div>\r\n\r\n              {/*<!-- content -->*/}\r\n              <div className=\"section-content anim text-center\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col-12 col-md-8 col-lg-6\">\r\n                    {/*<!-- Registration form container-->*/}\r\n                    <form className=\"send_email_form form-container form-container-transparent form-container-white\">\r\n                      <div className=\"form-desc text-white\">\r\n                        <h2 className=\"display-6 display-title anim-2\">\r\n                          Personal Information\r\n                        </h2>\r\n                        <p className=\"invite text-center anim-3\">\r\n                          Provide your personal information to complete the\r\n                          account registration process.\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-input anim-4\">\r\n                        <div className=\"form-group form-success-gone\">\r\n                          <label htmlFor=\"login-number\">\r\n                            What is your address?{\" \"}\r\n                          </label>\r\n                          <input\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            className=\"form-control-line form-control-white text-white\"\r\n                            type=\"text\"\r\n                            onChange={(e) => this.handleChange(e)}\r\n                            value={address}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <button\r\n                        to=\"/register#personal-info-address\"\r\n                        className=\"btn btn-white btn-round btn-full form-success-gone text-center px-1\"\r\n                      >\r\n                        Scroll down to add more information\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/*<!-- End of section wrapper -->*/}\r\n          </div>\r\n          {/*<!-- End of personal info/adress section -->*/}\r\n\r\n          {/*<!-- Begin of other info section -->*/}\r\n          <div\r\n            className=\"section section-register fp-auto-height-responsive \"\r\n            data-section=\"other-info\"\r\n          >\r\n            {/*<!-- Begin of section wrapper -->*/}\r\n            <div className=\"section-wrapper\">\r\n              {/*<!-- title -->*/}\r\n              <div className=\"section-title text-center\">\r\n                <h5 className=\"title-bg\">Other</h5>\r\n              </div>\r\n\r\n              {/*<!-- content -->*/}\r\n\r\n              <div className=\"section-content anim text-center\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col-12 col-md-8 col-lg-6\">\r\n                    {/*<!-- Registration form container-->*/}\r\n                    <form className=\"send_email_form form-container form-container-transparent form-container-white\">\r\n                      <div className=\"form-desc\">\r\n                        <h2 className=\"display-6 display-title anim-2 text-white\">\r\n                          Other Information\r\n                        </h2>\r\n                        <p className=\"invite text-center anim-3 text-white\">\r\n                          Provide your personal information to complete the\r\n                          account registration process.\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-input  anim-4\">\r\n                        <div className=\"form-group form-success-gone\">\r\n                          <label htmlFor=\"email\">What is your email? </label>\r\n                          <input\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            className=\"form-control-line form-control-white text-white\"\r\n                            onChange={(e) => this.handleChange(e)}\r\n                            type=\"email\"\r\n                            onBlur={(e) => this.validateCustomerEmail(e)}\r\n                            value={email}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group form-success-gone\">\r\n                          <label htmlFor=\"company_name\">\r\n                            What is your Company?{\" \"}\r\n                          </label>\r\n                          <input\r\n                            id=\"company_name\"\r\n                            name=\"company_name\"\r\n                            className=\"form-control-line form-control-white text-white\"\r\n                            onChange={(e) => this.handleChange(e)}\r\n                            type=\"text\"\r\n                            value={company_name}\r\n                          />\r\n                        </div>{\" \"}\r\n                        <div className=\"form-group form-success-gone\">\r\n                          <label htmlFor=\"company-address\">\r\n                            What is your Company address?{\" \"}\r\n                          </label>\r\n                          <input\r\n                            id=\"company-address\"\r\n                            name=\"company_address\"\r\n                            onChange={(e) => this.handleChange(e)}\r\n                            className=\"form-control-line form-control-white text-white\"\r\n                            type=\"text\"\r\n                            value={company_address}\r\n                          />\r\n                        </div>\r\n                        {/*checks if phone number is verified */}\r\n                        {this.props.isCodeVerified ? (\r\n                          <>\r\n                            {/* checks if customer exists then the button will update the customer */}\r\n                            {this.state.isUpdate ? (\r\n                              // if customer exists then update customer\r\n                              <button\r\n                                id=\"submit-num\"\r\n                                className=\"btn btn-white btn-round form-success-gone btn-full\"\r\n                                name=\"submit_num\"\r\n                                onClick={(e) => this.UpdateCustomer(e)}\r\n                              >\r\n                                Sign Up for fun\r\n                              </button>\r\n                            ) : (\r\n                              // if customer does not exists then save customer\r\n                              <button\r\n                                id=\"submit-num\"\r\n                                className=\"btn btn-white btn-round form-success-gone btn-full\"\r\n                                name=\"submit_num\"\r\n                                onClick={(e) => this.SaveCustomer(e)}\r\n                              >\r\n                                Sign Up for fun\r\n                              </button>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          //if customer does not verified number then show disabled button\r\n                          <button\r\n                            id=\"submit-num\"\r\n                            className=\"btn btn-white btn-round form-success-gone btn-full disabled\"\r\n                            name=\"submit_num\"\r\n                            onClick={(e) => this.showVerificationError(e)}\r\n                          >\r\n                            Sign Up for fun\r\n                          </button>\r\n                        )}\r\n                      </div>{\" \"}\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/*<!-- End of section wrapper -->*/}\r\n          </div>\r\n          {/*<!-- End of personal info/address section -->*/}\r\n        </main>\r\n        {/*<!-- END OF page main content -->*/}\r\n        {/* <FooterComponent id=\"site-footer\" /> */}\r\n        {/* starting div */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  saved: PropTypes.bool,\r\n  customer: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  saved: state.customer.saved,\r\n  customers: state.customer.customers,\r\n  customer: state.customer.customer,\r\n  isReqSent: state.customer.isReqSent,\r\n  isCodeVerified: state.customer.isCodeVerified,\r\n  isCustomerExist: state.customer.isCustomerExist,\r\n  customer_number: state.customer.customer_number,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  addNewCustomer,\r\n  getAllCustomers,\r\n  sendCodeRequest,\r\n  getCustomer,\r\n  updateCustomer,\r\n})(Register);\r\n","E:\\fiver_projects\\sutygon\\src\\components\\footer\\FooterComponent.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\header\\HeaderComponentHome.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\header\\HeaderComponentBlack.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\header\\HeaderComponentLogin.js",["134"],"import React from 'react'\r\nimport NavbarTopmenu from \"../miscellaneous/NavbarTopmenu\";\r\nimport NavbarSidebar from \"../miscellaneous/NavbarSidebar\";\r\nimport NavbarMainmenu from \"../miscellaneous/NavbarMainmenu\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n{/*problem*/}\r\nfunction HeaderComponentLogin() {\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n\r\n      {/* <!-- BEGIN OF site header Menu -->*/}\r\n      <header className=\"page-header navbar page-header-alpha scrolled-white menu-right topmenu-right\">\r\n\r\n\r\n        {/* <!-- Begin of menu icon toggler -->*/}\r\n        <button className=\"navbar-toggler site-menu-icon\" id=\"navMenuIcon\">\r\n          {/*<!-- Available class : menu-icon-dot / menu-icon-thick /menu-icon-random -->*/}\r\n          <span className=\"menu-icon menu-icon-random\">\r\n            <span className=\"bars\">\r\n              <span className=\"bar1\"></span>\r\n              <span className=\"bar2\"></span>\r\n              <span className=\"bar3\"></span>\r\n            </span>\r\n          </span>\r\n        </button>\r\n        {/*<!-- End of menu icon toggler -->*/}\r\n\r\n\r\n        {/*<!-- Begin of logo/brand -->*/}\r\n        <Link className={\"navbar-brand\"} to={\"/\"}>\r\n          <span className=\"logo\">\r\n            <img className=\"light-logo\" src=\"assets/img/1.png\" alt=\"Logo\" style={{display: 'inline'}}/>\r\n          </span>\r\n        </Link>\r\n\r\n        {/*<!-- End of logo/brand -->*/}\r\n\r\n\r\n        {/*<!-- begin of menu wrapper -->*/}\r\n        <div className=\"all-menu-wrapper\" id=\"navbarMenu\">\r\n          <NavbarTopmenu/>\r\n          <NavbarSidebar/>\r\n          <NavbarMainmenu/>\r\n        </div>\r\n        {/*<!-- end of menu wrapper -->*/}\r\n\r\n      </header>\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default HeaderComponentLogin\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\PageLoader.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\WalkthroughOverlayContainer.js",["135","136","137"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\n\r\nfunction resize() {\r\n  var context;\r\n  var $window = $(window);\r\n\r\n  // run this right away to set context\r\n  if ($window.width() <= 768) {\r\n    context = \"small\";\r\n  } else if (768 < $window.width() < 970) {\r\n    context = \"medium\";\r\n  } else {\r\n    context = \"large\";\r\n  }\r\n  // refresh the page only if you're crossing into a context\r\n  // that isn't already set\r\n  if ($window.width() <= 768 && context == \"small\") {\r\n    //refresh the page\r\n  } else if (768 < $window.width() < 970 && context == \"medium\") {\r\n    window.location.reload(true);\r\n  } else if (context != \"large\") {\r\n    // window.location.reload(true);\r\n  }\r\n}\r\n\r\nfunction WalkthroughOverlayContainer() {\r\n  const [show, sethide] = useState(true);\r\n  const setWalkthroughCompleted2 = (e) => {\r\n    e.preventDefault();\r\n    sethide(false);\r\n    setTimeout(function () {\r\n      $(\"#page-loader\").addClass(\"p-hidden\");\r\n    }, 800);\r\n    resize();\r\n  };\r\n  return (\r\n    <>\r\n      {show && (\r\n        <div className=\"walkthrough-overlay-container\">\r\n          <div className=\"menu-cont\">\r\n            <button className=\"navbar-toggler site-menu-icon\" id=\"navMenuIcon\">\r\n              <span className=\"menu-icon menu-icon-random\">\r\n                <span className=\"bars\">\r\n                  <span className=\"bar1\"></span>\r\n                  <span className=\"bar2\"></span>\r\n                  <span className=\"bar3\"></span>\r\n                </span>\r\n              </span>\r\n            </button>\r\n          </div>\r\n\r\n          <img\r\n            src=\"assets/img/whitearrow.png\"\r\n            className=\"arrow-img animate__animated animate__heartBeat\"\r\n            alt=\"WhiteArrow\"\r\n          />\r\n\r\n          <div className=\"walkthrough-verlay-1\" style={{ color: \"white\" }}>\r\n            <h1 className=\"center-vh animate__animated animate__backInLeft\">\r\n              Thêm nhiều bất ngờ\r\n            </h1>\r\n            <p className=\"center-vh animate__animated animate__backInRight\">\r\n              Bấm vào nút 3-gạch này để xem điểm thưởng, đơn hàng, thông tin cửa\r\n              hàng và TEAM SUTYGON nhé bạn!\r\n            </p>\r\n            <div className=\"center-vh\">\r\n              <Link\r\n                to={\"#\"}\r\n                onClick={(e) => setWalkthroughCompleted2(e)}\r\n                className={\"btn bttn-succes\"}\r\n              >\r\n                Ok\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WalkthroughOverlayContainer;\r\n","E:\\fiver_projects\\sutygon\\src\\actions\\customer.js",["138","139","140"],"import axios from \"axios\";\r\nimport {\r\n  CUSTOMER_LOADING,\r\n  CUSTOMER_SAVED,\r\n  CUSTOMER_ERROR,\r\n  CODE_REQUEST_SENT,\r\n  CODE_VERIFIED,\r\n  CODE_ERROR,\r\n  GET_CUSTOMERS,\r\n  CUSTOMER_FOUND,\r\n  CUSTOMER_UPDATED,\r\n  LOGIN_LOADING,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n} from \"./type\";\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV == \"production\"\r\n    ? \"https://sutygonbackend.herokuapp.com\"\r\n    : \"http://localhost:5000\";\r\nexport const login = (username, password) => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_LOADING,\r\n  });\r\n  const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n  const body = JSON.stringify({ username, password });\r\n  try {\r\n    const res = await axios.post(\r\n      `${BASE_URL}/api/customers/login`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const errors = err.response.data.errors;\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n// Add new online customer\r\nexport const addNewCustomer = (customer) => async (dispatch) => {\r\n  dispatch({ type: CUSTOMER_LOADING });\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify(customer);\r\n  try {\r\n    const res = await axios.post(`${BASE_URL}/api/customers/add`, body, config);\r\n\r\n    dispatch({\r\n      type: CUSTOMER_SAVED,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(console.log(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: CUSTOMER_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// get All customer\r\nexport const getAllCustomers = () => async (dispatch) => {\r\n  dispatch({ type: CUSTOMER_LOADING });\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/api/customers`);\r\n\r\n    dispatch({\r\n      type: GET_CUSTOMERS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CUSTOMER_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n//send verification code request\r\nexport const sendCodeRequest = (phonenumber) => async (dispatch) => {\r\n  dispatch({ type: CUSTOMER_LOADING });\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      `${BASE_URL}/api/verify/getcode?phonenumber=${phonenumber}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: CODE_REQUEST_SENT,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CODE_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n// check if there is customer exist with entered number\r\nexport const getCustomer = (number) => async (dispatch) => {\r\n  dispatch({ type: CUSTOMER_LOADING });\r\n\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/api/customers/search/${number}`);\r\n    dispatch({\r\n      type: CUSTOMER_FOUND,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CUSTOMER_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n//send verify code request\r\nexport const verifyCode = (code, phonenumber) => async (dispatch) => {\r\n  dispatch({ type: CUSTOMER_LOADING });\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\r\n      `${BASE_URL}/api/verify/verifycode?phonenumber=${phonenumber}&code=${code}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: CODE_VERIFIED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CODE_VERIFIED,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Update User\r\nexport const updateCustomer = (customer, id) => async (dispatch) => {\r\n  dispatch({ type: CUSTOMER_LOADING });\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(customer);\r\n  try {\r\n    const res = await axios.post(\r\n      `${BASE_URL}/api/customers/${id}`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: CUSTOMER_UPDATED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CUSTOMER_ERROR,\r\n    });\r\n  }\r\n};\r\n","E:\\fiver_projects\\sutygon\\src\\reducers\\index.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\NavbarSidebar.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\NavbarTopmenu.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\NavbarMainmenuBlack.js",[],"E:\\fiver_projects\\sutygon\\src\\components\\miscellaneous\\NavbarMainmenu.js",[],"E:\\fiver_projects\\sutygon\\src\\actions\\type.js",[],"E:\\fiver_projects\\sutygon\\src\\reducers\\customer.js",["141","142"],"import {\r\n  CUSTOMER_LOADING,\r\n  CUSTOMER_ERROR,\r\n  CUSTOMER_SAVED,\r\n  CODE_REQUEST_SENT,\r\n  CODE_VERIFIED,\r\n  GET_CUSTOMERS,\r\n  CODE_ERROR,CUSTOMER_FOUND,CUSTOMER_UPDATED,LOGIN_LOADING,LOGIN_SUCCESS,LOGIN_FAIL\r\n} from \"../actions/type\";\r\nconst initialState = {\r\n  saved: false,\r\n  customer:null,\r\n  customers: null,\r\n  loading: false,\r\n  saved: false,\r\n  isReqSent: false,\r\n  isCodeVerified: false,\r\n  isCustomerExist: false,\r\n  isLoggedIn:false,\r\n  customer_number:null,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n   case LOGIN_LOADING:\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n      isLoggedIn: false\r\n    };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn:true\r\n      }\r\n    case CUSTOMER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        isCustomerExist:false,\r\n        customer:null\r\n\r\n      };\r\ncase CUSTOMER_FOUND:\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    customer:payload,\r\n    isCustomerExist:true,\r\n    // isCodeVerified: false,\r\n    // isReqSent: false,\r\n  };\r\n    case CUSTOMER_SAVED:\r\n      return {\r\n        ...state,\r\n        saved: true,\r\n        loading: false,\r\n      };\r\n      case CUSTOMER_UPDATED:\r\n        return {\r\n          ...state,\r\n          saved: true,\r\n          loading: false,\r\n        };\r\n\r\n    case CODE_REQUEST_SENT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isReqSent: payload.status,\r\n        isCodeVerified: false,\r\n        customer_number: payload.to\r\n      };\r\n    case GET_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        customers: payload,\r\n        loading: false,\r\n        saved: false,\r\n      };\r\n      \r\n    case CODE_VERIFIED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isCodeVerified: payload.valid,\r\n        isReqSent: false,\r\n      };\r\n    case CODE_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: payload,\r\n          isLoggedIn:false\r\n        }\r\n    case CUSTOMER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\fiver_projects\\sutygon\\src\\components\\registeration\\VerifyCode.js",["143","144","145"],"import React from \"react\";\r\nimport { verifyCode, sendCodeRequest } from \"../../actions/customer\";\r\nimport { connect } from \"react-redux\";\r\nimport { OCAlert } from \"@opuscapita/react-alerts\";\r\nimport InputOtp from '@onefifteen-z/react-input-otp';\r\n\r\nclass VerifyCode extends React.Component {\r\n  state = {\r\n    phonenumber: \"\",\r\n    resendingCode: false,\r\n    verifying: false,\r\n    code: \"\",\r\n    otpCode:'',\r\n  };\r\n\r\n  sendCodeRequest = async (e) => {\r\n    e.preventDefault();\r\n    const {customer_number} = this.props;\r\n    this.setState({ resendingCode: true });\r\n    await this.props.sendCodeRequest(customer_number);\r\n    const { isReqSent } = this.props;\r\n    if (isReqSent == \"pending\") {\r\n      OCAlert.alertSuccess(\"Code sent to given phone number\", {\r\n        timeOut: 3000,\r\n      });\r\n    } else {\r\n      OCAlert.alertError(\"Phone Number is invalid, Try again\", {\r\n        timeOut: 3000,\r\n      });\r\n    }\r\n    this.setState({ resendingCode: false });\r\n  };\r\n  verifyCode = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ verifying: true });\r\n    const { otpCode } = this.state;\r\n    const { customer_number } = this.props;\r\n    await this.props.verifyCode(otpCode, customer_number);\r\n    const { isCodeVerified } = this.props;\r\n    setTimeout(function () {\r\n      if (isCodeVerified == true) {\r\n        OCAlert.alertSuccess(\"Phone Number Verified.\", { timeOut: 3000 });\r\n      } else {\r\n        OCAlert.alertError(\"Verification failed, Resend the code.\", {\r\n          timeOut: 3000,\r\n        });\r\n      }\r\n    }, 3000);\r\n\r\n    this.setState({ verifying: false });\r\n  };\r\n  showNumberError = (e) => {\r\n    e.preventDefault();\r\n    OCAlert.alertError(\"Send Verification First\", { timeOut: 3000 });\r\n  };\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  handleChange = otpCode => {\r\n    this.setState({ otpCode });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"section-wrapper\">\r\n        {/*<!-- title -->*/}\r\n        <div className=\"section-title text-center\">\r\n          <h5 className=\"title-bg\">Verify</h5>\r\n        </div>\r\n\r\n        {/*<!-- content -->*/}\r\n        <div className=\"section-content anim text-center\">\r\n          <div className=\"row align-items-center justify-content-center\">\r\n            <div className=\"col-12 col-md-8 col-lg-6\">\r\n              {/*<!-- Registration form container-->*/}\r\n              <form className=\"send_email_form form-container form-container-transparent form-container-white\">\r\n                <div className=\"form-desc\" style={{ color: \"white\" }}>\r\n                  <h2 className=\"display-6 display-title anim-2\">\r\n                    Verify Your Number\r\n                  </h2>\r\n                  <p className=\"invite text-center anim-3\">\r\n                    To ensure your privacy, we have sent you a code to the phone\r\n                    number you registered with. Please provide the code below.\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"form-input  anim-4\">\r\n                  <div className=\"form-group form-success-gone\">\r\n                    <div className=\"col-md-12 text-center\"> \r\n                  <InputOtp \r\n                  numberOnly={true}\r\n                  autoFocus={true}\r\n                  onChange={this.handleChange} \r\n                  // style={{marginLeft:\"px\" }}\r\n                  className=\"form-control-line form-control-white text-white text-center\"\r\n                  id=\"verify-number\"\r\n                  name=\"code\"\r\n\r\n\r\n                   /></div>\r\n\r\n                  </div>\r\n                  <div className=\"\">\r\n                    {this.state.verifying == true ? (\r\n                      <button\r\n                        id=\"submit-num\"\r\n                        className=\"btn btn-white btn-round form-success-gone float-left\"\r\n                        name=\"submit_num\"\r\n                        onClick={(e) => this.verifyCode(e)}\r\n                      >\r\n                        Verifying...\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        id=\"submit-num\"\r\n                        className=\"btn btn-white btn-round form-success-gone float-left\"\r\n                        name=\"submit_num\"\r\n                        onClick={(e) => this.verifyCode(e)}\r\n                      >\r\n                        Verify Code\r\n                      </button>\r\n                    )}\r\n                    {this.state.resendingCode ? (\r\n                      <button\r\n                        id=\"submit-num\"\r\n                        className=\"btn btn-white btn-round form-success-gone float-right\"\r\n                        name=\"submit_num\"\r\n                      >\r\n                        Resending...\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        id=\"submit-num\"\r\n                        className=\"btn btn-white btn-round form-success-gone float-right\"\r\n                        name=\"submit_num\"\r\n                        onClick={(e) =>\r\n                          this.sendCodeRequest(e, this.state.phonenumber)\r\n                        }\r\n                      >\r\n                        Resend Code\r\n                      </button>\r\n                    )}\r\n                  </div>{\" \"}\r\n                </div>\r\n              </form>\r\n              <div\r\n                className=\"\"\r\n                style={{ height: \"200px\", display: \"block\" }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nVerifyCode.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isCodeVerified: state.customer.isCodeVerified,\r\n  isReqSent: state.customer.isReqSent,\r\n  customer_number: state.customer.customer_number,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  verifyCode,\r\n  sendCodeRequest,\r\n})(VerifyCode);\r\n","E:\\fiver_projects\\sutygon\\src\\components\\registeration\\test.js",["146","147"],"import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport scrollToComponent from 'react-scroll-to-component';\r\n \r\nclass Test extends React.Component {\r\n \r\n  componentDidMount() {\r\n    scrollToComponent(this.Blue, { offset: 0, align: 'middle', duration: 500, ease:'inCirc'});\r\n  }\r\n \r\n  render() {\r\n    return (\r\n        <div>\r\n\r\n        <div className=\"page-cover\">\r\n        {/*<!-- Cover Background -->*/}\r\n        <div\r\n          className=\"cover-bg bg-img\"\r\n          data-image-src=\"assets/img/bg-default1.jpg\"\r\n        ></div>\r\n        {/*<!-- Transluscent mask as filter -->*/}\r\n        <div\r\n          className=\"cover-bg-mask bg-color\"\r\n          data-bgcolor=\"rgba(2, 3, 10, 0.7)\"\r\n        ></div>\r\n      </div>\r\n   <main className=\"page-main page-fullpage main-anim\">\r\n        <button onClick={() => scrollToComponent(this.Violet, { offset: 0, align: 'top', duration: 1500})}>Go To Violet</button>\r\n          <button onClick={() => scrollToComponent(this.Indigo, { offset: 0, align: 'bottom', duration: 500, ease:'inExpo'})}>Go To Indigo</button>\r\n          <button onClick={() => scrollToComponent(this.Blue, { offset: -200, align: 'middle', duration: 1500, ease:'inCirc'})}>Go To Blue</button>\r\n          <button onClick={() => scrollToComponent(this.Green, { offset: 0, align: 'middle', duration: 500, ease:'inExpo'})}>Go To Green</button>\r\n          <button onClick={() => scrollToComponent(this.Yellow, { offset: 0, align: 'top', duration: 1500, ease:'inCirc'})}>Go To Yellow</button>\r\n          <button onClick={() => scrollToComponent(this.Orange, { offset: 0, align: 'top', duration: 500, ease:'inCirc'})}>Go To Orange</button>\r\n          <button onClick={() => scrollToComponent(this.Red, { offset: 0, align: 'top', duration: 500})}>Go To Red</button>\r\n        <section className='violet'style={{height:'600px'}} ref={(section) => { this.Violet = section; }}>Violet</section>\r\n        <section className='indigo'style={{height:'600px'}} ref={(section) => { this.Indigo = section; }}>Indigo</section>\r\n        <section className='blue' style={{height:'600px'}} ref={(section) => { this.Blue = section; }}>\r\n        <div className=\"section-wrapper\">\r\n              {/*<!-- title -->*/}\r\n              <div className=\"section-title text-center\">\r\n                <h5 className=\"title-bg\">Other</h5>\r\n              </div>\r\n\r\n              {/*<!-- content -->*/}\r\n\r\n              <div className=\"section-content anim text-center\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col-12 col-md-8 col-lg-6\">\r\n                    {/*<!-- Registration form container-->*/}\r\n                    <form className=\"send_email_form form-container form-container-transparent form-container-white\">\r\n                      <div className=\"form-desc\">\r\n                        <h2 className=\"display-6 display-title anim-2 text-white\">\r\n                          Other Information\r\n                        </h2>\r\n                        <p className=\"invite text-center anim-3 text-white\">\r\n                          Provide your personal information to complete the\r\n                          account registration process.\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"form-input  anim-4\">\r\n                        <div className=\"form-group form-success-gone\">\r\n                          <label htmlFor=\"email\">What is your email? </label>\r\n                          <input\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            className=\"form-control-line form-control-white text-white\"\r\n                            onChange={(e) => this.handleChange(e)}\r\n                            type=\"email\"\r\n                            onBlur={(e) => this.validateCustomerEmail(e)}\r\n                            // value={email}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group form-success-gone\">\r\n                          <label htmlFor=\"company_name\">\r\n                            What is your Company?{\" \"}\r\n                          </label>\r\n                          <input\r\n                            id=\"company_name\"\r\n                            name=\"company_name\"\r\n                            className=\"form-control-line form-control-white text-white\"\r\n                            onChange={(e) => this.handleChange(e)}\r\n                            type=\"text\"\r\n                            // value={company_name}\r\n                          />\r\n                        </div>{\" \"}\r\n                        <div className=\"form-group form-success-gone\">\r\n                          <label htmlFor=\"company-address\">\r\n                            What is your Company address?{\" \"}\r\n                          </label>\r\n                          <input\r\n                            id=\"company-address\"\r\n                            name=\"company_address\"\r\n                            onChange={(e) => this.handleChange(e)}\r\n                            className=\"form-control-line form-control-white text-white\"\r\n                            type=\"text\"\r\n                            // value={company_address}\r\n                          />\r\n                        </div>\r\n                        {/*checks if phone number is verified */}\r\n                        {this.props.isCodeVerified ? (\r\n                          <>\r\n                            {/* checks if customer exists then the button will update the customer */}\r\n                            {this.state.isUpdate ? (\r\n                              // if customer exists then update customer\r\n                              <button\r\n                                id=\"submit-num\"\r\n                                className=\"btn btn-white btn-round form-success-gone btn-full\"\r\n                                name=\"submit_num\"\r\n                                onClick={(e) => this.UpdateCustomer(e)}\r\n                              >\r\n                                Sign Up for fun\r\n                              </button>\r\n                            ) : (\r\n                              // if customer does not exists then save customer\r\n                              <button\r\n                                id=\"submit-num\"\r\n                                className=\"btn btn-white btn-round form-success-gone btn-full\"\r\n                                name=\"submit_num\"\r\n                                onClick={(e) => this.SaveCustomer(e)}\r\n                              >\r\n                                Sign Up for fun\r\n                              </button>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          //if customer does not verified number then show disabled button\r\n                          <button\r\n                            id=\"submit-num\"\r\n                            className=\"btn btn-white btn-round form-success-gone btn-full disabled\"\r\n                            name=\"submit_num\"\r\n                            onClick={(e) => this.showVerificationError(e)}\r\n                          >\r\n                            Sign Up for fun\r\n                          </button>\r\n                        )}\r\n                      </div>{\" \"}\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </section>\r\n        <section className='green'style={{height:'600px'}} ref={(section) => { this.Green = section; }}>Green</section>\r\n        <section className='yellow' ref={(section) => { this.Yellow = section; }}>Yellow</section>\r\n        <section className='orange' ref={(section) => { this.Orange = section; }}>Orange</section>\r\n        <section className='red' ref={(section) => { this.Red = section; }}>Red</section>\r\n        <b>Inspired By <a href=\"https://hopechen1028.github.io/hopechen.me/\" target=\"_blank\">Hope</a> with Love and Peace</b>\r\n      </main>\r\n    \r\n    </div>\r\n    )\r\n  }\r\n}\r\n \r\nexport default Test;",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":60,"column":31,"nodeType":"158","messageId":"159","endLine":60,"endColumn":33},{"ruleId":"156","severity":1,"message":"160","line":63,"column":36,"nodeType":"158","messageId":"159","endLine":63,"endColumn":38},{"ruleId":"161","severity":1,"message":"162","line":82,"column":36,"nodeType":"163","messageId":"164","endLine":82,"endColumn":38},{"ruleId":"156","severity":1,"message":"157","line":98,"column":21,"nodeType":"158","messageId":"159","endLine":98,"endColumn":23},{"ruleId":"156","severity":1,"message":"157","line":105,"column":19,"nodeType":"158","messageId":"159","endLine":105,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":109,"column":26,"nodeType":"158","messageId":"159","endLine":109,"endColumn":28},{"ruleId":"156","severity":1,"message":"157","line":117,"column":25,"nodeType":"158","messageId":"159","endLine":117,"endColumn":27},{"ruleId":"156","severity":1,"message":"157","line":150,"column":26,"nodeType":"158","messageId":"159","endLine":150,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":192,"column":26,"nodeType":"167","messageId":"168","endLine":192,"endColumn":27,"suggestions":"169"},{"ruleId":"165","severity":1,"message":"166","line":192,"column":51,"nodeType":"167","messageId":"168","endLine":192,"endColumn":52,"suggestions":"170"},{"ruleId":"156","severity":1,"message":"157","line":258,"column":26,"nodeType":"158","messageId":"159","endLine":258,"endColumn":28},{"ruleId":"152","severity":1,"message":"171","line":289,"column":7,"nodeType":"154","messageId":"155","endLine":289,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":7,"column":1,"nodeType":"174","messageId":"175","endLine":7,"endColumn":14},{"ruleId":"156","severity":1,"message":"157","line":19,"column":41,"nodeType":"158","messageId":"159","endLine":19,"endColumn":43},{"ruleId":"156","severity":1,"message":"157","line":21,"column":53,"nodeType":"158","messageId":"159","endLine":21,"endColumn":55},{"ruleId":"156","severity":1,"message":"160","line":23,"column":22,"nodeType":"158","messageId":"159","endLine":23,"endColumn":24},{"ruleId":"156","severity":1,"message":"157","line":18,"column":24,"nodeType":"158","messageId":"159","endLine":18,"endColumn":26},{"ruleId":"152","severity":1,"message":"176","line":39,"column":13,"nodeType":"154","messageId":"155","endLine":39,"endColumn":19},{"ruleId":"152","severity":1,"message":"177","line":60,"column":11,"nodeType":"154","messageId":"155","endLine":60,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":15,"column":3,"nodeType":"180","messageId":"159","endLine":15,"endColumn":8},{"ruleId":"181","severity":1,"message":"182","line":24,"column":1,"nodeType":"183","endLine":114,"endColumn":2},{"ruleId":"156","severity":1,"message":"157","line":22,"column":19,"nodeType":"158","messageId":"159","endLine":22,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":41,"column":26,"nodeType":"158","messageId":"159","endLine":41,"endColumn":28},{"ruleId":"156","severity":1,"message":"157","line":107,"column":43,"nodeType":"158","messageId":"159","endLine":107,"endColumn":45},{"ruleId":"152","severity":1,"message":"184","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"186","line":147,"column":24,"nodeType":"187","endLine":147,"endColumn":94},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'WalkthroughOverlayContainer' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["190","191"],["192","193"],"'phonenumber' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'errors' is assigned a value but never used.","'res' is assigned a value but never used.","no-dupe-keys","Duplicate key 'saved'.","ObjectExpression","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Component' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"messageId":"194","fix":"195","desc":"196"},{"messageId":"197","fix":"198","desc":"199"},{"messageId":"194","fix":"200","desc":"196"},{"messageId":"197","fix":"201","desc":"199"},"removeEscape",{"range":"202","text":"203"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"204","text":"205"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"206","text":"203"},{"range":"207","text":"205"},[5923,5924],"",[5923,5923],"\\",[5948,5949],[5948,5948]]